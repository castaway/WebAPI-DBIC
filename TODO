error reporting (in HAL format)
validation / db constraints
look for business logic in stripes

improve partial response support for prefetch
use curie prefix in link keys

limit fields returned by default - add to the code on demand, so we know the
fields are actually being used and the inverse, that we can remove/change a
field that's not being exposed and know that no users of the api will be affected.

Refactor param handling to abstract ~json both for requests and constructing
link urls (where json data isn't fully handled at the moment, other than pass-thru).

check out https://metacpan.org/module/Catalyst::Controller::DBIC::API

Digest auth http://en.wikipedia.org/wiki/Digest_access_authentication
http://search.cpan.org/perldoc?Plack%3A%3AMiddleware%3A%3AAuth%3A%3ADigest
(Current Basic auth leaves db password in browsers auth cache or keychain)

Also http://stackoverflow.com/questions/319530/restful-authentication

Varnish ESI:
http://odino.org/some-common-questions-about-edge-side-includes/
http://stackoverflow.com/questions/11781576/most-secure-javascript-json-inline-technique
look into "Surrogate-Capability & Surrogate- Control headers for ESI based block caching"

To update HAL browser
git subtree pull --squash --prefix hal-browser git@github.com:mikekelly/hal-browser.git master
